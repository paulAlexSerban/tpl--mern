---
version: '3.8'

services:
    # ---------------------------------------------------------------------
    # | Proxy-Service - Nginx                                              |
    # ---------------------------------------------------------------------
    nginx-proxy:
        build:
            context: ../../../backend/services/spot-share-proxy
            dockerfile: prod.Dockerfile
        container_name: container-spot-share-proxy
        restart: unless-stopped
        ports:
            - '3000:80'
        depends_on:
            - ui-react-spa
            - express-spot-share-api
        networks:
            - spot-share-network
    # ---------------------------------------------------------------------
    # UI React SPA
    # ---------------------------------------------------------------------
    ui-react-spa:
        container_name: ui-react-spa-container
        build:
            context: ../../../ # set context to root of monorepo project
            dockerfile: ./frontend/apps/spot-share-app/Dockerfile.prod
            args:
                - VITE_APP_BACKEND_URL=${VITE_APP_BACKEND_URL}
                - VITE_APP_ASSET_URL=${VITE_APP_ASSET_URL}
                - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
        networks:
            - spot-share-network

    # ---------------------------------------------------------------------
    # | ExpressJS API                                                     |
    # ---------------------------------------------------------------------
    express-spot-share-api:
        build:
            context: ../../backend/api/spot-share-api
            dockerfile: prod.Dockerfile
        image: paulserbandev/spot-share-api
        container_name: container-spot-share-api
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        restart: always
        env_file:
            - ../../infrastructure/env/spot-share.compose.env
            - ../../.env
        networks:
            - spot-share-network
    # ---------------------------------------------------------------------
    # | MongoDB Database Server                                            |
    # ---------------------------------------------------------------------

    mongo-primary-service:
        container_name: mongo-primary-container
        hostname: mongo-primary-hostname
        image: mongo:6
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        volumes:
            - ../../database/.tmp-data/spot-share-data1:/data/db
        networks:
            - spot-share-network
        ports:
            - 27017:27017
        links:
            - mongo-replica-service-1
            - mongo-replica-service-2
        depends_on:
            - mongo-replica-service-1
            - mongo-replica-service-2
        restart: always
        entrypoint: ['mongod', '--replSet', 'mongoReplicaSet', '--bind_ip', 'localhost,mongo-primary-service']

    mongo-replica-service-1:
        container_name: mongo-replica-container-1
        hostname: mongo-replica-hostname-1
        image: mongo:6
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        volumes:
            - ../../database/.tmp-data/spot-share-data2:/data/db
        networks:
            - spot-share-network
        ports:
            - 27018:27017
        restart: always
        entrypoint: ['mongod', '--replSet', 'mongoReplicaSet', '--bind_ip', 'localhost,mongo-replica-service-1']

    mongo-replica-service-2:
        container_name: mongo-replica-container-2
        hostname: mongo-replica-hostname-2
        image: mongo:6
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        volumes:
            - ../../database/.tmp-data/spot-share-data3:/data/db
        networks:
            - spot-share-network
        ports:
            - 27019:27017
        restart: always
        entrypoint: ['mongod', '--replSet', 'mongoReplicaSet', '--bind_ip', 'localhost,mongo-replica-service-2']

    mongosetup:
        image: mongo:6
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        depends_on:
            - mongo-primary-service
            - mongo-replica-service-1
            - mongo-replica-service-2
        volumes:
            - ../scripts:/scripts
        networks:
            - spot-share-network
        restart: 'no'
        entrypoint: ['bash', '/scripts/mongo_setup.sh']

networks:
    spot-share-network:
        driver: bridge
