---
networks:
    base-spa-fullstack-network:
        driver: bridge
volumes:
    postgres:

services:
    # ---------------------------------------------------------------------
    # | Proxy-Service - Nginx                                              |
    # ---------------------------------------------------------------------
    nginx-proxy:
        container_name: nginx-proxy-container
        build:
            context: ../../../ # set context to root of monorepo project
            dockerfile: ./backend/services/proxy/base-spa-fullstack-proxy/Dockerfile.dev
        ports:
            - '3000:80'
        volumes:
            - ../../../backend/services/proxy/base-spa-fullstack-proxy/default.dev.conf:/etc/nginx/conf.d/default.conf
        restart: unless-stopped
        networks:
            - base-spa-fullstack-network
        depends_on:
            - ui-react-spa
            - express-api

    # ---------------------------------------------------------------------
    # UI React SPA
    # ---------------------------------------------------------------------
    ui-react-spa:
        container_name: ui-react-spa-container
        build:
            context: ../../../ # set context to root of monorepo project
            dockerfile: .${UI_PROJECT_PATH}/Dockerfile.dev
        volumes:
            - /usr/src/app/node_modules # Avoids overwriting node_modules with local volume
            - /usr/src/app${UI_PROJECT_PATH}/node_modules # Avoids overwriting dist with local volume
            - ../../..${UI_PROJECT_PATH}:/usr/src/app${UI_PROJECT_PATH}/ # Mount the app directory to the container
        restart: unless-stopped
        networks:
            - base-spa-fullstack-network

    # ---------------------------------------------------------------------
    # | ExpressJS API                                                     |
    # ---------------------------------------------------------------------
    express-api:
        restart: always
        container_name: express-api-container
        build:
            context: ../../../
            # /backend/api/filtered-gallery-api
            dockerfile: .${API_PROJECT_PATH}/Dockerfile.dev
        env_file:
            - ../../../infrastructure/env/filtered-gallery.compose.env
            - ../../../.env
        volumes:
            - /usr/src/app/node_modules
            - /usr/src/app${API_PROJECT_PATH}/dist
            - /usr/src/app${API_PROJECT_PATH}/node_modules
            - ../../..${API_PROJECT_PATH}:/usr/src/app${API_PROJECT_PATH}
        networks:
            - base-spa-fullstack-network

    # # ---------------------------------------------------------------------
    # # | Contract Broker Postgres Database                                  |
    # # ---------------------------------------------------------------------

    # postgres:
    #     image: postgres
    #     healthcheck:
    #         test: psql postgres --command "select 1" -U postgres
    #     volumes:
    #         - postgres:/var/lib/postgresql/data
    #     environment:
    #         POSTGRES_USER: postgres
    #         POSTGRES_PASSWORD: password
    #         POSTGRES_DB: postgres

    # # ---------------------------------------------------------------------
    # # | Contract Broker Service                                            |
    # # ---------------------------------------------------------------------

    # pact-contract-broker:
    #     image: "pactfoundation/pact-broker:2.123.0-pactbroker2.112.0"
    #     ports:
    #         - "9292:9292"
    #     depends_on:
    #         - postgres
    #     environment:
    #         PACT_BROKER_PORT: '9292'
    #         PACT_BROKER_DATABASE_URL: "postgres://postgres:password@postgres/postgres"
    #         PACT_BROKER_LOG_LEVEL: INFO
    #         PACT_BROKER_SQL_LOG_LEVEL: DEBUG
    #         # PACT_BROKER_DATABASE_CONNECT_MAX_RETRIES is only needed for docker-compose
    #         # because the database takes longer to start up than the puma process
    #         # Should not be needed in production.
    #         PACT_BROKER_DATABASE_CONNECT_MAX_RETRIES: "5"
    #         # The list of allowed base URLs (not setting this makes the app vulnerable to cache poisoning)
    #         # This list allows the app to be addressed from the host and from within another docker container correctly
    #         # Ngnix config below makes the app accessible on ports 443 and 80, while the Ruby application itself runs on port 9292
    #         PACT_BROKER_BASE_URL: 'https://localhost http://localhost http://localhost:9292 http://pact-contract-broker:9292 https://host.docker.internal http://host.docker.internal http://host.docker.internal:9292'
