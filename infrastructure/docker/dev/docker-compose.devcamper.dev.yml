---
services:
    # ---------------------------------------------------------------------
    # | FE Service - Nginx-Service                                                     |
    # ---------------------------------------------------------------------
    ui-nginx-proxy:
        build:
            context: ../../../
            dockerfile: ./frontend/sites/devcamper-site/Dockerfile.dev
        container_name: container-ui-devcamper-proxy
        image: paulserbandev/devcamper-ui-proxy
        restart: unless-stopped
        ports:
            - '3000:80'
        volumes:
            # uncomment the following lines to use the local build
            # note that you have to build the frontend first locally else the binds will be done with empty directories
            # - ../../../frontend/sites/devcamper-site/dist:/usr/share/nginx/html
            # - ../../../asset/devcamper-assets/dist:/usr/share/nginx/html/assets
            - ../../../frontend/sites/devcamper-site/config/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - devcamper-networks
    # ---------------------------------------------------------------------
    # | ExpressJS API                                                     |
    # ---------------------------------------------------------------------
    devcamper-api:
        restart: always
        container_name: container-devcamper-api
        build:
            context: ../../../
            dockerfile: ./backend/api/devcamper-api/Dockerfile.dev
        env_file:
            - ../../../infrastructure/env/devcamper.compose.env
            - ../../../.env
        volumes:
            - /usr/src/app/node_modules
            - /usr/src/app/backend/api/devcamper-api/dist
            - /usr/src/app/backend/api/devcamper-api/node_modules
            - ../../../backend/api/devcamper-api:/usr/src/app/backend/api/devcamper-api
        depends_on:
            - mongo-database-service
        networks:
            - devcamper-networks

    # ---------------------------------------------------------------------
    # | MongoDB Database Server                                            |
    # ---------------------------------------------------------------------
    mongo-database-service:
        image: mongo:latest
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        # user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        container_name: mongo-database-container
        env_file:
            - ../../../infrastructure/env/devcamper.compose.env
            - ../../../.env
        volumes:
            - devcamper-data:/data/db
        ports:
            - '27017:27017'
        networks:
            - devcamper-networks

    # ---------------------------------------------------------------------
    # | Monitoring - Prometheus                                            |
    # ---------------------------------------------------------------------

    # prometheus:
    #     image: prom/prometheus:latest
    #     container_name: prometheus
    #     volumes:
    #         - ../monitoring/prometheus:/etc/prometheus
    #         - prometheus_data:/prometheus
    #     ports:
    #         - 9090:9090
    #     expose:
    #         - 9090
    #     networks:
    #         - devcamper-networks
    #     command:
    #         - '--config.file=/etc/prometheus/prometheus.yml'
    #         - '--storage.tsdb.path=/prometheus'
    #         - '--web.console.libraries=/etc/prometheus/console_libraries'
    #         - '--web.console.templates=/etc/prometheus/consoles'
    #         - '--web.enable-lifecycle'

    # # ---------------------------------------------------------------------
    # # | Monitoring - Grafana                                               |
    # # ---------------------------------------------------------------------

    # grafana:
    #     image: grafana/grafana:latest
    #     container_name: grafana
    #     volumes:
    #         - grafana_data:/var/lib/grafana
    #         - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
    #     environment:
    #         - GF_AUTH_DISABLE_LOGIN_FORM=true
    #         - GF_AUTH_ANONYMOUS_ENABLED=true
    #         - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    #     ports:
    #         - 3030:3000
    #     expose:
    #         - 3030
    #     networks:
    #         - devcamper-networks
    #     depends_on:
    #         - prometheus

networks:
    devcamper-networks:
        driver: bridge

volumes:
    devcamper-data: {}
    prometheus_data: {}
    grafana_data: {}
