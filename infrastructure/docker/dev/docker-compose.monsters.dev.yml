---
networks:
    monsters-network:
        driver: bridge

services:
    # ---------------------------------------------------------------------
    # | Proxy-Service - Nginx                                              |
    # ---------------------------------------------------------------------
    nginx-proxy:
        build:
            context: ../../../backend/services/monsters-proxy
            dockerfile: dev.Dockerfile
        container_name: container-monsters-proxy
        image: paulserbandev/monsters-proxy
        restart: unless-stopped
        ports:
            - '3000:80'
        volumes:
            - ../../../backend/services/monsters-proxy/default.conf:/etc/nginx/conf.d/default.conf
            - ../../../backend/services/monsters-proxy/logs:/var/log/nginx
        networks:
            - monsters-network
    # ---------------------------------------------------------------------
    # | ExpressJS API                                                     |
    # ---------------------------------------------------------------------
    express-monsters-api:
        build:
            context: ../../backend/api/monsters-api
            dockerfile: dev.Dockerfile
        image: paulserbandev/monsters-api
        container_name: container-monsters-api
        restart: always
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        environment:
            POSTGRES_USER: node_user
            POSTGRES_PASSWORD: node_password
            POSTGRES_DB: monstersdb
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
        volumes:
            - ../../backend/api/monsters-api:/usr/src/app/
            - /usr/src/app/node_modules
        networks:
            - monsters-network
        depends_on:
            - postgres
    # ---------------------------------------------------------------------
    # | PostgreSQL                                                        |
    # ---------------------------------------------------------------------
    postgres:
        image: postgres:latest
        container_name: container-monsters-postgres
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: monstersdb
        ports:
            - 15432:5432
        volumes:
            - ../../database/.tmp-data/monsters-db:/var/lib/postgresql/data
            - ../../database/seeds/monsters-db/monsters.sql:/docker-entrypoint-initdb.d/monsters.sql
        networks:
            - monsters-network

    # ---------------------------------------------------------------------
    # | PgAdmin                                                           |
    # ---------------------------------------------------------------------
    pgadmin:
        image: dpage/pgadmin4
        ports:
            - 15433:80
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        environment:
            POSTGRES_USER: postgres
            PGADMIN_DEFAULT_EMAIL: admin@test.com
            PGADMIN_DEFAULT_PASSWORD: postgres
        depends_on:
            - postgres
        networks:
            - monsters-network
        volumes:
            - ../../database/.tmp-data/monsters-pgadmin-data/:/var/lib/pgadmin/
