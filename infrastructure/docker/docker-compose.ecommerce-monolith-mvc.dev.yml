---
version: '3.7'
networks:
    ecommerce-monolith-mvc-network:
        driver: bridge
services:
    # ---------------------------------------------------------------------
    # | Proxy-Service - Nginx                                              |
    # ---------------------------------------------------------------------
    nginx-proxy:
        build:
            context: ../../backend/middleware/ecommerce-monolith-mvc-proxy
            dockerfile: dev.Dockerfile
        container_name: container-ecommerce-monolith-mvc-proxy
        image: paulserbandev/ecommerce-monolith-mvc-proxy
        restart: unless-stopped
        ports:
            - '3000:80'
        volumes:
            - ../../backend/middleware/ecommerce-monolith-mvc-proxy/default.conf:/etc/nginx/conf.d/default.conf
            - ../../backend/middleware/ecommerce-monolith-mvc-proxy/logs:/var/log/nginx
        networks:
            - ecommerce-monolith-mvc-network
    # ---------------------------------------------------------------------
    # | ExpressJS Web Service                                              |
    # ---------------------------------------------------------------------
    express-ecommerce-monolith-mvc-service:
        build:
            context: ../../backend/services/ecommerce-monolith-mvc-service
            dockerfile: dev.Dockerfile
        image: paulserbandev/ecommerce-monolith-mvc-service
        # ensure that the CONTAINER user id and group id are the same as the HOST user id and group id
        # without this, the container will fail to write files to the host volume
        user: '${HOST_USER_ID}:${HOST_GROUP_ID}'
        container_name: container-ecommerce-monolith-mvc-service
        restart: always
        volumes:
            - ../../backend/services/ecommerce-monolith-mvc-service:/usr/src/app/
            - /usr/src/app/node_modules
        networks:
            - ecommerce-monolith-mvc-network
