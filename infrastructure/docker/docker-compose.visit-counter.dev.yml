---
version: '3.7'
networks:
    visit-counter-network:
        driver: bridge
services:
    # ---------------------------------------------------------------------
    # | Proxy-Service - Nginx                                              |
    # ---------------------------------------------------------------------
    nginx-proxy:
        build:
            context: ../../backend/middleware/visit-counter-proxy
            dockerfile: dev.Dockerfile
        container_name: container-visit-counter-proxy
        image: paulserbandev/visit-counter-proxy
        restart: unless-stopped
        ports:
            - '3000:80'
        volumes:
            - ../../backend/middleware/visit-counter-proxy/default.conf:/etc/nginx/conf.d/default.conf
            - ../../backend/middleware/visit-counter-proxy/logs:/var/log/nginx
        depends_on:
            - express-visit-counter-api
        networks:
            - visit-counter-network
    # ---------------------------------------------------------------------
    # | ExpressJS API                                                     |
    # ---------------------------------------------------------------------
    express-visit-counter-api:
        build:
            context: ../../backend/api/visit-counter-api
            dockerfile: dev.Dockerfile
        image: paulserbandev/visit-counter-api
        container_name: container-visit-counter-api
        restart: always
        volumes:
            - ../../backend/api/visit-counter-api:/usr/src/app/
            - /usr/src/app/node_modules
        env_file:
            - ../../infrastructure/env/visit-counter.compose.env
            - ../../.env
        depends_on:
            - redis-cache-middleware
        networks:
            - visit-counter-network

    # ---------------------------------------------------------------------
    # | Redis                                                              |
    # ---------------------------------------------------------------------
    redis-cache-middleware:
        image: redis:latest
        container_name: container-visit-counter-redis
        restart: always
        ports:
            - '6379:6379'
        networks:
            - visit-counter-network
